:root {
	--radius: .3em;
	--trans: .2s;
	--fontstack: Ubuntu, Calibri, Arial, Helvetica, sans-serif;
	--bg: #dddfd4;
	--accent: #fae596;
	--toned: #3fb0ac;
	--darktoned: #173e43;
	--hide: rgba(0,0,0,0);
	--show: rgba(0,0,0,1);
	--chat-receive: #90CAF9;
	--chat-send: #81C784;
}

@font-face {
	font-family: Ampersand;
	src: local('Baskerville'), local('Goudy Old Style'), local('Palatino'), local('Book Antiqua');
	unicode-range: U+26, U+A9;
}

/* General stuffs */
*:focus {
	border-color: var(--toned);
	outline-color: var(--toned);
}

img {
	min-width: 100%;
	max-width: 100%;
}

a {
	color: var(--toned);
	transition: var(--trans);
	&:hover {
		color: var(--darktoned);
	}
	&:focus {
		text-decoration: underline !important; /* Always underline on focus */
		// font-style: italic;	
	}
}

p {
	max-width: 40em;
}

h1, h2, h3, h4, h5, h6 {
	font-family: Ampersand, var(--fontstack);
	font-size: 9vw;
	section & {
		font-size: 3em;
	}
}

h1 + figure {
	margin-top: -31vw;
	img {
		position: relative;
		z-index: -1;
	}
}

figure {
	position: relative;
	margin: 0;
	z-index: -1;
	@media screen and (orientation: landscape){
		img:first-of-type {
			display: none;
		}
	}
	@media screen and (orientation: portrait){
		img:nth-of-type(2) {
			display: none;
		}
	}
	figcaption {
		color: var(--bg);
		background-color: var(--darktoned);
		a:hover {
			color: var(--accent);
		}
		padding: 1em;
		position: relative;
		margin-top: -1em;
		footer {
			font-family: Ampersand, var(--fontstack);
			font-style: italic;
			text-align: right;
			font-size: .9em;
		}
		p + footer {
			margin-top: -1em;
		}
	}
}

/* Page content */
body {
	color: var(--darktoned);
	background-color: var(--bg);
	margin: 0;
	font-family: var(--fontstack);
	font-size: 1.2em;
	line-height: 1.4;
	/* Skip to content */
	> div:first-of-type {
		position: absolute;
		z-index: 10;
		top: -3em;
		width: 100%;
		background-color: var(--toned);
		text-align: center;
		padding: .8em 0;
		transition: var(--trans), background-color calc(var(--trans)*2) calc(var(--trans)/2);
		a {
			padding: 1em;
			color: var(--darktoned);
			outline: 0;
			position: relative;
			z-index: 99;
		}
		+ * {
			&::before {
				content: ' ';
				background-color: rgba(0,0,0,.8);
				top: 0;
				right: 0;
				bottom: 0;
				left: 0;
			}
			
		}
		&:focus-within {
			top: 0;
			background-color: var(--accent);
			a {
				background-color: var(--toned);
				color: var(--accent);
				outline: 0;
				position: relative;
				z-index: 99;
			}
			+ * {
				position: relative;
				&::before {
					content: ' ';
					background-color: rgba(0,0,0,.8);
					top: 0;
					right: 0;
					bottom: 0;
					left: 0;
				}
			}
		}
	}
	/* "Hero" banner */
	div + article:first-of-type {
		display: flex;
		flex-direction: column;
		justify-content: space-around;
		position: relative;
		min-height: 100vh;
		overflow: hidden;
		padding: 2em;
		h1 {
			margin: 0;
			text-align: right;
			a {
				text-decoration: none;
				color: white;
			}
		}
		p {
			background-color: var(--accent);
			border-radius: var(--radius);
			padding: 1.5em;
			animation: slideInLeft 1s ease-out 1.5s;
		}
		img {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			z-index: -1;
			min-height: 120vh;
			min-width: 120vw;
			max-width: 200%;
			animation: fadeInBanner 2s cubic-bezier(.97,.01,.83,.67), breatheImg 8s infinite ease-in-out;
			filter: blur(10px) brightness(.6);
		}
	}
	/* Product page article */
	div + nav + article#main {
		display: grid;
		grid-template-columns: 100%;
		@media (min-width: 40em) {
			grid-template-columns: 50% 50%;
		}
		> p {
			padding: 0 1em;
		}
		> p, > h1 {
			display: flex;
			flex-direction: column;
			justify-content: center;
		}
		img {
			order: 1;
			grid-column: 1 / -1;
		}
		+ fieldset {
			margin-top: -6em;
		}
	}
	> ul {
		display: flex;
		justify-content: flex-end;
		flex-direction: column;
		padding: 1em 0;
		max-width: 40em;
		margin: 0 auto;
		list-style: none;
		li {
			display: flex;
			max-height: 8em;
			justify-content: space-between;
			align-items: baseline;
			background-color: var(--darktoned);
			padding: 1em 2em;
			margin-bottom: 1em;
			border-radius: calc(var(--radius)*8) var(--radius);
			box-shadow: 0 .2em 0 var(--toned);
			* {
				display: inline;
			}
		}
		h1 {
			font-size: 1.2em;
			margin: 0 1em 0 0;
			a {
				color: var(--accent);
				&:hover, &:focus {
					color: var(--toned);
				}
			}
		}
		img {
			min-width: 0;
			max-width: 10em;
			min-height: 0;
		}
	}
}

main {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(12em, 1fr));
	grid-gap: 2em;
	padding: 2em;
	background-color: var(--toned);
	background-image:
		linear-gradient(90deg, rgba(180, 180, 180, .2) 0, rgba(255, 255, 255, .2) .6em, transparent 0),
		linear-gradient(90deg, rgba(255, 255, 255, .2) 2em, transparent 0);
	background-size: 2em 40%, 2.7em 100%, 2em 100%;
	> article {
		background-color: var(--accent);
		padding: 1em;
		display: flex;
		flex-direction: column;
		// grid-row: span 1;
		h1 {
			font-size: 1.8em;
			margin-bottom: 0;
			padding: 0;
			order: 2;
		}
		a {
			text-decoration: none;
		}
	}
}

nav:first-of-type {
	/* This needs to be above the regular nav, otherwise the border-color change is ignored */
	border-top: .5em solid var(--darktoned);
	ul, ol {
		background-color: var(--accent);
		li {
			padding: 0;
		}
		a {
			padding: 1em 2em;
			color: var(--darktoned);
			&::before {
				content: "\0026";
				font-family: Ampersand;
				padding-right: .2em;
				color: var(--toned);
			}
			&:hover, &:focus {
				background-color: var(--toned);
				color: var(--accent);
				outline: 0;
			}
		}
	}
}

nav {
	transition: var(--trans);
	display: grid;
	&:focus-within, &:hover {
		border-color: var(--toned);
	}
	ul, ol {
		list-style: none;
		margin: 0;
		padding: 0;
		display: flex;
		justify-content: space-around;
		background-color: var(--darktoned);
		color: var(--toned);
		li {
			padding: 1em 2em;
		}
		a {
			color: var(--accent);
			text-decoration: none;
			display: block;
			// padding: 1em 2em;
			position: relative;
			&:hover, &:focus {
				color: var(--toned);
			}
		}
		ul {
			display: none; /* Needed to disable focus interaction */
			position: absolute;
			width: 100%;
			z-index: 99;
		}
		li {
			position: relative;
		}
		li:hover, li:focus-within {
			ul {
				display: inline-block;
				animation: fadeIn calc(var(--trans)) linear;
			}
			a:hover, a:focus {
				&::before{
					color: var(--accent);
				}
			}
		}
	}
	h1 {
		display: none;
	}
}



article {
	> h1 {
		padding: 0 1em;
	}
}

fieldset {
	border: none;
	label {
		display: flex;
		align-items: center;
		flex-direction: column;
		position: relative;
		color: var(--hide);
		svg {
			order: -1;
			width: 2em;
			height: 2em;
			transition: calc(var(--trans) * 2);
			filter: grayscale(100%);
			cursor: pointer;
			position: absolute;
			bottom: 0;
		}
	}
	> div { /* Added to support flex/grid view in a fieldset */
		padding: 1em 0;
		display: grid;
		grid-template-columns: repeat(4, 0 25%);
	}
	legend {
		position: relative;
	}
	&:focus-within {
		position: relative;
		z-index: 1;
		filter: blur(0);
		svg {
			filter: grayscale(50%);
		}
		/* De-emphasize by dimming */
		&::before {
			background-color: rgba(0,0,0,.8);
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
		}
	}
	&::before {
		position: fixed;
		content: ' ';
		z-index: -1; /* Without this line, the site isn't usable anymo'*/
		transition: background-color var(--trans);
	}
}

input[type=radio] {
	/* Display none cancels the focus interactions
	The opacity hides it, in the CSS grid these fields are specified as having no size
	This css should be more specific since we are hiding the radio fields */
	opacity: 0;
	&:checked + label {
		svg {
			filter: grayscale(0);
			transform: scale(1.5);
		}
	}
}

/* Progress bar */
progress {
	-webkit-appearance: none;
	overflow: hidden;
	height: 1.4em;
	display: block;
	width: 100%;
	order: 1;
	border-bottom: .5em solid var(--darktoned);
	&::-webkit-progress-bar { // The full bar
		// background-color: yellow;
	}
	&::-webkit-progress-value { // The value
		background-color: var(--chat-send);
	}
}

#chat {
	background-color: var(--bg);
	color: var(--darktoned);
	position: relative;
	z-index: 0;
	max-width: 40em;
	margin: 0 auto;
	ol {
		padding: 0;
		list-style: none;
		li {
			padding: .5em 1em;
			margin-bottom: .8em;
			position: relative; // For the footer::after
			p {
				margin: 0;
			}
		}
		footer {
			display: flex;
			justify-content: space-between;
			p {
				font-size: .8em;
				+ p {
					// Hide the text while still be able to show the icon
					color: var(--hide);
				}
				&::before {
					float: right;
					color: var(--show);
				}
				&:first-of-type { // Always the 'Posted On' text
					&::before, &::after {
						content: ' ';
						position: absolute;
						bottom: 0;
						right: 0;
						z-index: -1;
						background-color: var(--chat-receive);
					}
					&::before {
						top: 0;
						left: 0;
						border-radius: 1em;
					}
					&::after { // Block corner fill
						width: 1em;
					}
				}
				&:nth-last-child(n+2), &:nth-last-child(n+2) ~ p { // Both P's IF there is at least 2
					// Block corner fill
					&::before, &::after {
						background-color: var(--chat-send);
					}
					&::after {
						left: 0;
					}
				}
			}
		}
	}
	form {  
		&:valid {
			background-color: var(--chat-bg);
			[type=submit] {
				background-color: var(--chat-send);
			}
		}
		label {
			position: absolute;
			clip: rect(0,0,0,0);
		}
		display: grid;
		grid-template-columns: 9fr 1fr;
		textarea, button {
			border: 0;
		}
		textarea {
			font-size: 1.4em;
			box-sizing: border-box;
			width: 100%;
			border-radius: 1em 0 0 1em;
			padding: 1em 0 1em 1em;
		}
		button {
			border-radius: 0 1em 1em 0;
			margin: 0;
			margin-bottom: .25em;
		}
	}
}

// Form related stuff
form {
	label {
		flex-direction: row;
		justify-content: flex-start;
	}
	& > a {
		display: inline-block;
	}
	&:valid {
		background-color: var(--chat-send);
	}
	ul + & {
		margin: 0 auto;
		max-width: 40em;
		// min-width: 30em;
		display: flex;
		flex-direction: column;
		// padding: 0 30%;

		align-items: center;
	}
}

fieldset label {
	display: flex;
	align-items: center;
	flex-direction: column;
	position: relative;
	color: var(--hide);
	svg {
		order: -1;
		width: 2em;
		height: 2em;
		transition: calc(var(--trans) * 2);
		filter: grayscale(100%);
		cursor: pointer;
		position: absolute;
		bottom: 0;
	}
}

input, button {
	display: block;
	font-size: 1.1em;
	margin-bottom: 1em;
	margin-top: .5em;
	padding: .2em;
	border: 3px solid gray;
	&:invalid {
		border-color: red;
	}
	&:placeholder-shown {
		border-color: orange;
	}
	&:valid {
		border-color: var(--chat-send);
	}
	&[type=submit] {
		position: relative;
		margin: 1.2em 0;
		&::before {
			content: ' ';
			position: absolute;
			top: -1em;
			bottom: -1em;
			left: -1em;
			right: -1em;
		}
		// This should start working with focus visible.
		// Unfortunately the focus event fires before the click thus the button is focused on the larger size, but never actually pressed
		// &:focus {
		//     outline-color: red;
		//     padding: -1em;
		//     &::before {
		//         top: 0;
		//         bottom: 0;
		//         left: 0;
		//         right: 0;
		//     }
		// }
	}
}

input[type=checkbox] {
	position: absolute;
	clip: rect(0,0,0,0);
	+ label {
		display: inline-block;
		border-radius: .2em;
		cursor: pointer;
		&::before {
			content: '';
			transition: var(--trans);
			display: inline-block;
			vertical-align: -.15em;
			width: 1em;
			height: 1em;
			margin-right: .4em;
			border-radius: .2em;
			background-color: var(--chat-receive);
			text-indent: .15em;
			line-height: .65;
			box-shadow: 1px 1px 1px rgba(0,0,0,1);
		}
	}
	&:checked {
		+ label {
			&::before {
				background-color: var(--chat-send);
				box-shadow: 1px 1px 1px inset;
			}
		}
	}
	&:focus {
		+ label {
			outline: auto 5px var(--focus);
		}
	}
}

/* Define icons */
[data-status=DELIVERED] {
	&::before {
		content: '📬';
	}
}
[data-status=READ] {
	&::before {
		content: '📭';
	}
}

/* Animations */
@keyframes fadeIn {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}
@keyframes fadeInBanner {
	0% {
		filter: blur(20px) brightness(0);
	}
	100% {
		filter: blur(10px) brightness(.6);
	}
}

@keyframes breatheImg {
	0% {
		max-width: 185%
	}
	50% {
		max-width: 215%;
	}
	100% {
		max-width: 185%;
	}
}

/* Added this to remove some personal plugin from displaying the IP address */
#tqShowIP, #chrome_websiteIP {
	display: none;
}